{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport store from \"../../redux/store/store\";\nimport { EditTodo } from \"../../redux/state/todo/todoSlice\";\nexport function EditAlart(i, item) {\n  Swal.fire({\n    text: \"Update your task!\",\n    input: \"text\",\n    inputValue: item,\n    inputValidator: value => {\n      if (value) {\n        store.dispatch(EditTodo({\n          index: i,\n          task: value\n        }));\n        setTimeout(() => {\n          toast.dismiss();\n        }, 3000);\n      }\n    }\n  });\n}\n_c = EditAlart;\nvar _c;\n$RefreshReg$(_c, \"EditAlart\");","map":{"version":3,"names":["Swal","store","EditTodo","EditAlart","i","item","fire","text","input","inputValue","inputValidator","value","dispatch","index","task","setTimeout","toast","dismiss","_c","$RefreshReg$"],"sources":["/media/shoumik/Others/Workspace/Company Task/Simple_task_app/src/components/todo/EditTodo.js"],"sourcesContent":["import Swal from \"sweetalert2\";\nimport store from \"../../redux/store/store\";\nimport { EditTodo } from \"../../redux/state/todo/todoSlice\";\n\nexport function EditAlart(i, item) {\n    Swal.fire({\n        text: \"Update your task!\",\n        input: \"text\",\n        inputValue: item,\n        inputValidator: (value) => {\n            if (value) {\n                store.dispatch(EditTodo({ index: i, task: value }));\n                setTimeout(() => {\n                    toast.dismiss();\n                }, 3000);\n            }\n        },\n    });\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,QAAQ,QAAQ,kCAAkC;AAE3D,OAAO,SAASC,SAASA,CAACC,CAAC,EAAEC,IAAI,EAAE;EAC/BL,IAAI,CAACM,IAAI,CAAC;IACNC,IAAI,EAAE,mBAAmB;IACzBC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAEJ,IAAI;IAChBK,cAAc,EAAGC,KAAK,IAAK;MACvB,IAAIA,KAAK,EAAE;QACPV,KAAK,CAACW,QAAQ,CAACV,QAAQ,CAAC;UAAEW,KAAK,EAAET,CAAC;UAAEU,IAAI,EAAEH;QAAM,CAAC,CAAC,CAAC;QACnDI,UAAU,CAAC,MAAM;UACbC,KAAK,CAACC,OAAO,EAAE;QACnB,CAAC,EAAE,IAAI,CAAC;MACZ;IACJ;EACJ,CAAC,CAAC;AACN;AAACC,EAAA,GAdef,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}