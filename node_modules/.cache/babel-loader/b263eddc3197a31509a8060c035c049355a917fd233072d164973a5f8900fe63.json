{"ast":null,"code":"// import {createSlice} from \"@reduxjs/toolkit\";\n// import {toast} from \"react-toastify\";\n//\n//\n// export const todoSlice= createSlice({\n//     name:\"todo\",\n//     initialState:{\n//         value:[]\n//     },\n//     reducers:{\n//         AddTodo:(state, action)=>{\n//             state.value.push(action.payload)\n//             toast.success(\"Create Successful\")\n//\n//         },\n//         RemoveTodo:(state, action)=>{\n//             state.value.splice(action.payload,1)\n//             toast.error(\"Deleted\")\n//         },\n//         EditTodo:(state, action)=>{\n//             state.value.splice(action.payload['index'],1,action.payload['task'])\n//             toast.info(\"Update Success\");\n//         }\n//     }\n// })\n//\n// export const {AddTodo,RemoveTodo,EditTodo}=todoSlice.actions;\n// export default todoSlice.reducer;\n\n// todoSlice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n// Function to retrieve todos from session storage\nconst getTodosFromSessionStorage = () => {\n  const storedTodos = JSON.parse(sessionStorage.getItem(\"todos\")) || [];\n  return storedTodos;\n};\nconst initialState = {\n  value: getTodosFromSessionStorage()\n};\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialState,\n  reducers: {\n    AddTodo: (state, action) => {\n      state.value.push(action.payload);\n      toast.success(\"Create Successful\");\n      sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n    },\n    RemoveTodo: (state, action) => {\n      state.value.splice(action.payload, 1);\n      toast.error(\"Deleted\");\n      sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n    },\n    EditTodo: (state, action) => {\n      const {\n        index,\n        task\n      } = action.payload;\n      state.value[index] = task;\n      toast.info(\"Update Success\");\n      sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n    }\n  }\n});\nexport const {\n  AddTodo,\n  RemoveTodo,\n  EditTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","toast","getTodosFromSessionStorage","storedTodos","JSON","parse","sessionStorage","getItem","initialState","value","todoSlice","name","reducers","AddTodo","state","action","push","payload","success","setItem","stringify","RemoveTodo","splice","error","EditTodo","index","task","info","actions","reducer"],"sources":["/media/shoumik/Others/Workspace/Company Task/Simple_task_app/src/redux/state/todo/todoSlice.js"],"sourcesContent":["// import {createSlice} from \"@reduxjs/toolkit\";\n// import {toast} from \"react-toastify\";\n//\n//\n// export const todoSlice= createSlice({\n//     name:\"todo\",\n//     initialState:{\n//         value:[]\n//     },\n//     reducers:{\n//         AddTodo:(state, action)=>{\n//             state.value.push(action.payload)\n//             toast.success(\"Create Successful\")\n//\n//         },\n//         RemoveTodo:(state, action)=>{\n//             state.value.splice(action.payload,1)\n//             toast.error(\"Deleted\")\n//         },\n//         EditTodo:(state, action)=>{\n//             state.value.splice(action.payload['index'],1,action.payload['task'])\n//             toast.info(\"Update Success\");\n//         }\n//     }\n// })\n//\n// export const {AddTodo,RemoveTodo,EditTodo}=todoSlice.actions;\n// export default todoSlice.reducer;\n\n\n// todoSlice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n// Function to retrieve todos from session storage\nconst getTodosFromSessionStorage = () => {\n    const storedTodos = JSON.parse(sessionStorage.getItem(\"todos\")) || [];\n    return storedTodos;\n};\n\nconst initialState = {\n    value: getTodosFromSessionStorage(),\n};\n\nexport const todoSlice = createSlice({\n    name: \"todo\",\n    initialState: initialState,\n    reducers: {\n        AddTodo: (state, action) => {\n            state.value.push(action.payload);\n            toast.success(\"Create Successful\");\n            sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n        },\n        RemoveTodo: (state, action) => {\n            state.value.splice(action.payload, 1);\n            toast.error(\"Deleted\");\n            sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n        },\n        EditTodo: (state, action) => {\n            const { index, task } = action.payload;\n            state.value[index] = task;\n            toast.info(\"Update Success\");\n            sessionStorage.setItem(\"todos\", JSON.stringify(state.value));\n        },\n    },\n});\n\nexport const { AddTodo, RemoveTodo, EditTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EACrC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;EACrE,OAAOJ,WAAW;AACtB,CAAC;AAED,MAAMK,YAAY,GAAG;EACjBC,KAAK,EAAEP,0BAA0B;AACrC,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAGV,WAAW,CAAC;EACjCW,IAAI,EAAE,MAAM;EACZH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAChChB,KAAK,CAACiB,OAAO,CAAC,mBAAmB,CAAC;MAClCZ,cAAc,CAACa,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,SAAS,CAACN,KAAK,CAACL,KAAK,CAAC,CAAC;IAChE,CAAC;IACDY,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,CAACa,MAAM,CAACP,MAAM,CAACE,OAAO,EAAE,CAAC,CAAC;MACrChB,KAAK,CAACsB,KAAK,CAAC,SAAS,CAAC;MACtBjB,cAAc,CAACa,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,SAAS,CAACN,KAAK,CAACL,KAAK,CAAC,CAAC;IAChE,CAAC;IACDe,QAAQ,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAM;QAAEU,KAAK;QAAEC;MAAK,CAAC,GAAGX,MAAM,CAACE,OAAO;MACtCH,KAAK,CAACL,KAAK,CAACgB,KAAK,CAAC,GAAGC,IAAI;MACzBzB,KAAK,CAAC0B,IAAI,CAAC,gBAAgB,CAAC;MAC5BrB,cAAc,CAACa,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,SAAS,CAACN,KAAK,CAACL,KAAK,CAAC,CAAC;IAChE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEQ,UAAU;EAAEG;AAAS,CAAC,GAAGd,SAAS,CAACkB,OAAO;AAClE,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}